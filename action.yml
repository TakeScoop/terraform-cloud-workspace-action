name: Terraform Cloud Workspace
description: Manages Terraform Cloud workspaces
inputs:
  terraform_version:
    description: Terraform version
    default: "1.0.3"
  terraform_token:
    description: Terraform Cloud token
    required: true
  terraform_host:
    description: Terraform Cloud host
    default: app.terraform.io
  terraform_organization:
    description: Terraform Cloud organization
    required: true
  name:
    description: Name of the workspace. Becomes a prefix if workspaces are passed (`${name}-${workspace}`)
    default: "${{ github.event.repository.name }}"
  runner_terraform_version:
    description: Terraform version used to create the workspace
    default: "1.0.3"
  workspaces:
    description: Comma separated list of workspaces
    default: ""
  backend_config:
    description: Backend config block
    default: ""
  apply:
    description: Whether to apply the proposed Terraform changes
    required: true
  import:
    description: Whether to attempt to import existing matching resources using the resource name
    default: false
  variables:
    description: YAML encoded variables to apply to all workspaces
  workspace_variables:
    description: YAML encoded variables to apply to specific workspaces, with variables nested under workspace names
  vcs_type:
    description: Terraform VCS type (e.g., "github"). Superseded by `vcs_token_id`. If neither are passed, no VCS integration is added.
  vcs_token_id: 
    description: Terraform VCS client token ID. Takes precedence over `vcs_name`. If neither are passed, no VCS integration is added.
  vcs_repo:
    description: Repository identifier for a VCS integration. Required if `vcs_name` or `vcs_token_id` are passed
    default: "${{ github.repository }}"
  vcs_ingress_submodules:
    description: Whether to allow submodule ingress
    default: false
outputs:
  plan:
    description: Human readable Terraform plan
  plan_json:
    description: JSON plan
runs:
  using: docker
  image: Dockerfile
