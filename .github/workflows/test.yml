name: Test

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Test
        env:
          TF_TOKEN: ${{ secrets.TF_TOKEN_OSS }}
          TF_ORGANIZATION: takescoop-oss
        run: go test -v ./...

      - name: "E2E: Workspace name"
        id: e2e-ws-name
        run: echo "::set-output name=name::action-e2e-test-$(date +%s)"

      - name: "E2E: test"
        uses: ./
        with:
          runner_terraform_version: '1.0.5'
          terraform_organization: takescoop-oss
          terraform_token: ${{ secrets.TF_TOKEN_OSS }}
          name: ${{ steps.e2e-ws-name.outputs.name }}
          tags: |-
            - terraform:true
          workspace_tags: |-
            staging:
              - environment:staging
            production:
              - environment:production
          apply: true
          variables: |-
            - key: foo
              value: bar
              category: terraform
          workspace_variables: |-
            staging:
              - key: environment
                value: staging
                category: terraform
              - key: environment
                value: production
                category: terraform
          workspaces: |-
            - staging
            - production
          backend_config: |-
            local:
              path: /github/workspace/terraform.tfstate
      - name: "E2E: Assert & Cleanup"
        env:
          TF_TOKEN: ${{ secrets.TF_TOKEN_OSS }}
        shell: bash
        run: |
          set -e

          stat terraform.tfstate && echo "Success: state file present"

          for ws in staging production ; do
            curl -fsS \
              --header "Authorization: Bearer $TF_TOKEN" \
              --header "Content-Type: application/vnd.api+json" \
              --request DELETE \
              "https://app.terraform.io/api/v2/organizations/takescoop-oss/workspaces/${{ steps.e2e-ws-name.outputs.name }}-$ws"
             echo "Success: Found and deleted ${{ steps.e2e-ws-name.outputs.name }}-$ws"
          done
